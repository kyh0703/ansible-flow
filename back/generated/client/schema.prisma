// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../generated/client"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model User {
  id         String    @id @default(uuid())
  email      String    @unique
  password   String?
  name       String
  bio        String?
  provider   String?
  providerId String?
  isAdmin    Boolean   @default(false)
  updatedAt  DateTime  @updatedAt
  createdAt  DateTime  @default(now())
  projects   Project[]
  tokens     Token[]
}

model Token {
  id           String   @id @default(uuid())
  user         User     @relation(fields: [userId], references: [id])
  userId       String
  refreshToken String
  expiresIn    Int
  createdAt    DateTime @default(now())
}

model Project {
  id          String   @id @default(uuid())
  user        User     @relation(fields: [userId], references: [id])
  userId      String
  name        String
  description String?
  updatedAt   DateTime @updatedAt
  createdAt   DateTime @default(now())
  flows       Flow[]
}

model Flow {
  id          String   @id @default(uuid())
  project     Project  @relation(fields: [projectId], references: [id])
  projectId   String
  name        String
  description String?
  updatedAt   DateTime @updatedAt
  createdAt   DateTime @default(now())
  nodes       Node[]
  edges       Edge[]
}

model Node {
  id          String   @id @default(uuid())
  uuid        String
  flow        Flow     @relation(fields: [flowId], references: [id])
  flowId      String
  type        String
  position    Json
  styles      Json
  width       Int
  height      Int
  hidden      Boolean  @default(false)
  description String   @default("")
  updatedAt   DateTime @updatedAt
  createdAt   DateTime @default(now())
}

model Edge {
  id        String   @id @default(uuid())
  uuid      String
  flow      Flow     @relation(fields: [flowId], references: [id])
  flowId    String
  source    String
  target    String
  type      String
  label     String   @default("")
  hidden    Boolean  @default(false)
  markerEnd Json
  updatedAt DateTime @updatedAt
  createdAt DateTime @default(now())
}

model OauthState {
  id          String   @id @default(uuid())
  state       String   @unique
  redirectUrl String
  expiresAt   DateTime
  createdAt   DateTime @default(now())
}
